name: 'Deploy Helios'
on:
  push:
    branches:
      - main
    paths:
      - 'apps/helios/**'
      - '.github/workflows/helios.yml'

defaults:
  run:
    shell: bash
    working-directory: apps/helios

env:
  CI: true
  HUSKY: 0
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  helios-git-tasks:
    name: 'Helios: Setup Git, Node and dependencies'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2.2.2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('../../pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

  helios-code-quality:
    name: 'Helios: Code quality'
    needs: ['helios-git-tasks']
    runs-on: ubuntu-latest
    steps:
      - name: Lint code
        run: pnpm lint

      - name: Run Unit Tests
        run: pnpm test

  helios-build-app:
    name: 'Helios: App build'
    needs: ['helios-git-tasks', 'helios-code-quality']
    runs-on: ubuntu-latest
    steps:
      - name: Build app
        run: pnpm build

  helios-deploy:
    name: 'Helios: Deploy to CF'
    needs: ['helios-git-tasks','helios-code-quality','helios-build-app']
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Helios
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'apps/helios'
          preCommands: |
            pnpm dlx wrangler@d1 d1 execute olympus --file=../../schema.sql
          secrets: |
            SESSION_TAG
            SESSION_SECRETS
            AUTH0_CALLBACK_URL
            AUTH0_CLIENT_ID
            AUTH0_CLIENT_SECRET
            AUTH0_DOMAIN
            APP_BASE_URL
            METRONOME_API_KEY
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SESSION_TAG: ${{ secrets.SESSION_TAG }}
          SESSION_SECRETS: ${{ secrets.SESSION_SECRETS }}
          AUTH0_CALLBACK_URL: ${{ secrets.AUTH0_CALLBACK_URL }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
          METRONOME_API_KEY: ${{ secrets.METRONOME_API_KEY }}
