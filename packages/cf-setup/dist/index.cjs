#!/usr/bin/env node
"use strict";var P=Object.create;var m=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var v=(e,r)=>{for(var o in r)m(e,o,{get:r[o],enumerable:!0})},N=(e,r,o,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of z(r))!V.call(e,i)&&i!==o&&m(e,i,{get:()=>r[i],enumerable:!(n=S(r,i))||n.enumerable});return e};var t=(e,r,o)=>(o=e!=null?P(K(e)):{},N(r||!e||!e.__esModule?m(o,"default",{value:e,enumerable:!0}):o,e));var b=t(require("node:process"),1),$=t(require("chalk"),1),j=require("yargs/helpers"),O=t(require("yargs/yargs"),1);var A={name:"cf-setup",packageManager:"yarn@4.0.1",version:"1.3.0",private:!0,type:"module",scripts:{build:"rm -rf ./dist && node build.cjs"},dependencies:{chalk:"^4.1.2","drizzle-kit":"0.20.2",toml:"^3.0.0",yargonaut:"^1.1.4",yargs:"^17.7.2"},devDependencies:{"@types/eslint":"^8","@types/yargs":"^17.0.31","@typescript-eslint/eslint-plugin":"^6.10.0","@typescript-eslint/parser":"^6.10.0",esbuild:"^0.19.5",eslint:"^8.53.0","eslint-config-prettier":"^9.0.0",prettier:"^3.1.0",typescript:"^5.2.2"},bin:"dist/index.cjs",files:["./dist/*"]};var g={};v(g,{builder:()=>I,command:()=>G,describe:()=>H,handler:()=>L});var a=t(require("node:path"),1),u=t(require("node:process"),1);var l={all:{description:"All CF assets",requiresArg:!1,default:!0,type:"boolean",conflicts:["d1","kv","r2"]},d1:{description:"D1 Databases",requiresArg:!1,type:"boolean",conflicts:["all"]},kv:{description:"KV Namespaces",requiresArg:!1,type:"boolean",conflicts:["all"]},r2:{description:"R2 Buckets",requiresArg:!1,type:"boolean",conflicts:["all"]}};var F=t(require("toml"),1),R=t(require("node:fs"),1),c=t(require("chalk"),1);var k=t(require("node:fs"),1),s=e=>{k.default.rmSync(e,{recursive:!0,force:!0})};var d=t(require("chalk"),1),f=t(require("node:child_process"),1),w=async(e,r,o,n)=>{console.info(d.default.blue(`Preparing to setup D1 Database: ${e}`)),console.log(r);let i=`drizzle-kit generate:sqlite --schema=${r} --out=${o}`;f.default.execSync(i,{stdio:"inherit",encoding:"utf8"});let q=`NO_D1_WARNING=true wrangler d1 migrations apply ${e} --local --persist-to=${n}`;f.default.execSync(q,{stdio:"inherit",encoding:"utf8"}),console.info(d.default.blue(`Completed setup of D1 Database: ${e}`))};var h=t(require("chalk"),1),C=async e=>{console.info(h.default.blue(`Preparing to setup KV: ${e}`))};var x=t(require("chalk"),1),D=async e=>{console.info(x.default.blue(`Preparing to setup R2: ${e}`))};var G="prepare",H="Prepare local Cloudflare assets.",I=e=>e.options({wranglerFile:{description:"Path to custom wrangler TOML file.",default:a.default.join(u.default.cwd(),"./wrangler.toml"),demandOption:!0,type:"string"},persistTo:{description:"Directory for wrangler state.",default:a.default.join(u.default.cwd(),".wrangler/"),requiresArg:!0,type:"string",normalize:!0},schemaDir:{description:"Directory to source schemas from.",demandOption:!0,requiresArg:!0,type:"string",normalize:!0},reset:{alias:"r",description:"Delete migrations and the D1 databases/KV before applying changes.",requiresArg:!1,type:"boolean",conflicts:["dry-run"]},...l,dryRun:{description:"Only print to console and make no changes",requiresArg:!1,type:"boolean",conflicts:["reset"]}}),L=async e=>{let r=F.default.parse(R.default.readFileSync(e.wranglerFile,"utf-8"));if((e.all||e.d1)&&"d1_databases"in r)for(let o of r.d1_databases){let n=typeof o.migrations_dir>"u"?"migrations/":o.migrations_dir;e.reset&&(s(n),s(a.default.join(e.persistTo,"v3/d1"))),await w(o.binding,e.schemaDir,n,e.persistTo)}else console.info(c.default.yellow(`Skipping D1 setup. --d1 not specified or no d1_databases defined in ${e.wranglerFile}`));if((e.all||e.kv)&&"kv_namespaces"in r)for(let o of r.kv_namespaces)e.reset&&s(a.default.join(e.persistTo,"v3/kv")),await C(o.binding);else console.info(c.default.yellow(`Skipping KV setup. --kv not specified or no kv_namespaces defined in ${e.wranglerFile}`));if((e.all||e.r2)&&"r2_namespaces"in r)for(let o of r.r2_namespaces)e.reset&&s(a.default.join(e.persistTo,"v3/r2")),await D(o.binding);else console.info(c.default.yellow(`Skipping R2 setup. --r2 not specified or no r2_namespaces defined in ${e.wranglerFile}`))};var y={};v(y,{builder:()=>J,command:()=>W,description:()=>E,handler:()=>Q});var p=t(require("node:path"),1),_=t(require("node:process"),1);var W="reset",E="Reset local Cloudflare assets.",J=e=>e.options({...l,persistTo:{description:"Directory for wrangler state.",default:p.default.join(_.default.cwd(),".wrangler/"),requiresArg:!0,type:"string",normalize:!0}}),Q=async e=>{e.d1?s(p.default.join(e.persistTo,"v3/d1")):e.kv?s(p.default.join(e.persistTo,"v3/kv")):e.r2?s(p.default.join(e.persistTo,"v3/r2")):s(e.persistTo)};var T=[g,y];var U=(0,O.default)((0,j.hideBin)(b.default.argv)).scriptName("cf-setup").command(T).wrap(null).version(A.version).alias("v","version").help().alias("h","help").showHelpOnFail(!1,"Specify --help or help for available options");(async()=>(console.info($.default.yellow(`Running from: ${b.default.cwd()}`)),await U.parse()))();
